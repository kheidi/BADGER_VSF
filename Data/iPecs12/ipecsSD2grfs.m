function [ forces,moments,time ] = ipecsSD2grfs( filename )
%ipecs2grfs transforms the raw strain gauge written to the sd card
%by the iPecs sensor to forces and moments
%reference frame can be viewed and transformed in the iPecs Lab software
%The iPecs SD Data Extraction utility must be used to get the data from the
%card. 
% The data must also be split into individual trials using the iPecs data
% splitting utility to use this function

% given calibration matrix for our sensor
% column format: A135 A225 A315 S0 S90 S180 S270 zSum
% row format: Fx Fy Fz Mx My Mz 
calmat = [-16.5607060000000,-5.07609700000000,-20.1051530000000,-474.719453000000,-35.1004790000000,546.627020000000,-36.9136470000000,-5.54443900000000;           
          2.23595600000000,1.75445300000000,2.34064800000000,16.9068880000000,511.080524000000,-4.75913800000000,-525.751631000000,3.62707000000000;
          -64.5678320000000,-15.9686460000000,-32.0541040000000,48.3776840000000,-43.0225360000000,48.9966910000000,-56.7165010000000,486.347719000000;
          712.836909000000,865.602061000000,-177.552804000000,291.509341000000,-354.997530000000,281.781992000000,-221.456422000000,178.459260000000;
          130.265109000000,-860.580609000000,-705.360377000000,-323.485680000000,244.605117000000,-172.655537000000,248.900240000000,-185.549558000000;
          -33.9203450000000,6.72265700000000,-35.3523100000000,368.395369000000,251.543364000000,374.982729000000,248.718251000000,-12.0169790000000]; 


% data column format: Row Time A45 A135 A225 A315 S0 S90 S180 S270 xTilt yTilt zTilt zSum
data = importipecs(filename);
startRow = find(data(:,2)==min(data(:,2))); 
data = data(startRow:size(data,1),:);
time = data(:,2)-data(1,2);

% pull out the data needed for mulitplication with the calibration matrix
% the data is corrected because at zero load, the strain gauges return
% non-zero voltage
% column format: A135 A225 A315 S0 S90 S180 S270 zSum
dataCal = [data(:,4:10) data(:,14)];
dataCor = dataCal-1.2075; 

% calculate ground reaction forces and moments using the calibration
% matrix and corrected strain gauge matrix
grfs = zeros(size(data,2),6);
for i=1:length(dataCal)
    grfs(i,:) = calmat*dataCor(i,:)';
end

% pull out forces and moments and plot them
forces=grfs(:,1:3)*4.44822; % convert from lbf to N
moments=grfs(:,4:6)*0.112985; % convert from lbf-in to N-m
figure; hold on; 
subplot(1,2,1); plot(time,forces);
title('forces');
subplot(1,2,2); plot(time,moments);
title('moments');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Code to compare data from sd card with data streamed from iPecs Lab
%  ipecs_grf.mat includes two nx3 arrays containing the forces and moments
%  from the trial. Uncomment below this line to use.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% load('ipecs_grf.mat');
% figure; hold on; 
% subplot(1,2,1); plot(time,ipecs_forces(startRow:7533,:));
% title('forces');
% subplot(1,2,2); plot(time,ipecs_moments(startRow:7533,:));
% title('moments');
% 
% disp('mean force diff:')
% mean(forces)-mean(ipecs_forces)
% disp('mean moment diff:')
% mean(moments)-mean(ipecs_moments)
% 
% for i=1:size(forces,2)
%     forceDifVec = abs(forces(:,i)-ipecs_forces(startRow:7533,i));
%     momentDifVec = abs(moments(:,i)-ipecs_moments(startRow:7533,i));  
% end
% disp(['max force diff: ',num2str(max(forceDifVec))]);
% disp(['max moment diff: ',num2str(max(momentDifVec))]);
end 

function data = importipecs(filename)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   IPECSDATA003 = IMPORTFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   IPECSDATA003 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   iPecsData003 = importfile('iPecs_Data_003.txt', 2, 1814);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/01/31 14:39:57

%% Initialize variables.
delimiter = ',';
startRow=2;
endRow=inf; 
%% Format for each line of text:
%   Row:    double (%f)
%	Time:   double (%f)
%   A45:    double (%f)
%	A135:   double (%f)
%   A225:   double (%f)
%	A315:   double (%f)
%   S0:     double (%f)
%	S90:    double (%f)
%   S180:   double (%f)
%	S270:   double (%f)
%   xTilt:  double (%f)
%	yTilt:  double (%f)
%   zTilt:  double (%f)
%	zSum:   double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Create output variable
data = [dataArray{1:end-1}];
data = data(1:(length(data)-1),:);
end